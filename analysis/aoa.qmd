---
title: "Untitled"
format: html
---

```{r}
library(tidyverse)
library(wordbankr)
```

English AoA estimates
```{r}
eng_wg <- get_instrument_data("English (American)", "WG", 
                              administration_info = TRUE,
                              item_info = TRUE) |> 
  filter(!dataset_origin_name %in% c("Byers Heinlein Bilingual",
                                     "PoulinDubois_English_French_Bilingual"),
         item_kind == "word")
eng_ws <- get_instrument_data("English (American)", "WS", 
                              administration_info = TRUE,
                              item_info = TRUE) |> 
  filter(!dataset_origin_name %in% c("Byers Heinlein Bilingual",
                                     "PoulinDubois_English_French_Bilingual",
                                     "Marchman Dallas Bilingual",
                                     "Hoff_English_Mexican_Bilingual",
                                     "Armon-Lotem_Hebrew_English_Bilingual"),
         item_kind == "word")
```

```{r}
fit_bglm <- function(df, max_steps = 200) {
  model <- arm::bayesglm(cbind(num_true, num_false) ~ age,
                         family = "binomial",
                         prior.mean = .3,
                         prior.scale = c(.01),
                         prior.mean.for.intercept = 0,
                         prior.scale.for.intercept = 2.5,
                         prior.df = 1,
                         data = df,
                         maxit = max_steps)
  intercept <- model$coefficients[["(Intercept)"]]
  slope <- model$coefficients[["age"]]
  tibble(intercept = intercept, slope = slope, aoa = -intercept / slope)
}

fit_aoas <- function(wb_data, max_steps = 200, min_aoa = 0, max_aoa = 72) {
  aoas <- wb_data |>
    mutate(num_false = total - num_true) |>
    nest(data = -c(measure, item_definition)) |>
    mutate(aoas = map(data, fit_bglm)) |>
    dplyr::select(-data) |>
    unnest(aoas) |>
    filter(aoa >= min_aoa, aoa <= max_aoa)
}
```

```{r}
eng_wb_data <- bind_rows(eng_wg, eng_ws) |> 
  group_by(item_definition, age) |> 
  summarise(produces__num_true = sum(produces, na.rm = T),
            understands__num_true = sum(understands, na.rm = T),
            produces__total = n(),
            understands__total = sum(form_type == "WG"),
            .groups = "drop") |> 
  pivot_longer(cols = -c(item_definition, age),
               names_to = c("measure", "count"),
               names_pattern = "(.+)__(.+)") |>
  pivot_wider(names_from = count) |> 
  filter(total != 0)

eng_aoas <- fit_aoas(eng_wb_data)
write_csv(eng_aoas, "eng_aoas.csv")
```

